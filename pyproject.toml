[project]
name = "file-editor"
version = "0.1.0"
description = "Memory-efficient partial file editing library for Python with agent-friendly API"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "rwxproject", email = "rwxproject@gmail.com" }
]
maintainers = [
    { name = "rwxproject", email = "rwxproject@gmail.com" }
]
requires-python = ">=3.11"
dependencies = [
    "filelock>=3.12.0",
]
keywords = [
    "file-editing",
    "memory-efficient",
    "partial-editing",
    "agents",
    "ai",
    "streaming",
    "mmap",
    "csv",
    "markdown"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Filesystems",
    "Topic :: Text Processing",
    "Topic :: Utilities",
    "Typing :: Typed",
]

[project.urls]
Homepage = "https://github.com/rwxproject/file-editor"
Documentation = "https://github.com/rwxproject/file-editor#readme"
Repository = "https://github.com/rwxproject/file-editor.git"
"Bug Tracker" = "https://github.com/rwxproject/file-editor/issues"
Changelog = "https://github.com/rwxproject/file-editor/releases"

[project.optional-dependencies]
pandas = ["pandas>=2.0.0"]
hdf5 = ["h5py>=3.9.0"]
all = ["file-editor[pandas,hdf5]"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.3.0",
    "pytest-mock>=3.11.0",
    "pytest-timeout>=2.1.0",
    "pytest-benchmark>=4.0.0",
    "hypothesis>=6.88.0",
    "tox>=4.11.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.6.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "pre-commit>=3.4.0",
    "twine>=6.1.0",
    "codecov>=2.1.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Testing configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/file_editor",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=95",
    "--timeout=300",
    "-ra",
    "--tb=short",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance benchmarks",
    "security: marks tests as security-related",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/file_editor"]
branch = true
parallel = true
omit = [
    "tests/*",
    "examples/*",
    "src/file_editor/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Ruff configuration
[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "PLR0913", # Too many arguments to function call
    "PLR0912", # Too many branches
    "PLR0915", # Too many statements
]
unfixable = [
    "ERA001", # Don't remove commented out code
]

[tool.ruff.per-file-ignores]
"tests/**/*" = ["PLR2004", "S101", "ARG"]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
strict = true
warn_unreachable = true
warn_unused_ignores = true
warn_redundant_casts = true
disallow_any_generics = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_return_any = true
implicit_reexport = false
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

# Bandit security configuration
[tool.bandit]
exclude_dirs = ["tests", "examples"]
skips = ["B101", "B601"]
