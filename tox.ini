[tox]
env_list = py311, py312, py313, coverage, security, docs
min_version = 4.0

[testenv]
description = run unit tests
package = wheel
wheel_build_env = .pkg
deps =
    pytest>=7.4.0
    pytest-cov>=4.0.0
    pytest-xdist>=3.3.0
    pytest-mock>=3.11.0
    pytest-timeout>=2.1.0
    pytest-benchmark>=4.0.0
    hypothesis>=6.88.0
commands =
    pytest {posargs:tests/}

[testenv:py311]
description = run tests with Python 3.11
base_python = python3.11
extras = all

[testenv:py312]
description = run tests with Python 3.12
base_python = python3.12
extras = all

[testenv:py313]
description = run tests with Python 3.13
base_python = python3.13
extras = all

[testenv:coverage]
description = run tests with coverage reporting
deps =
    {[testenv]deps}
    coverage[toml]>=7.0
commands =
    pytest --cov=src/file_editor --cov-report=term-missing --cov-report=html --cov-report=xml --cov-fail-under=80 {posargs:tests/}

[testenv:security]
description = run security checks
deps =
    bandit[toml]>=1.7.5
    safety>=2.3.0
commands =
    bandit -r src/file_editor
    safety check

[testenv:lint]
description = run linting checks
deps =
    black>=23.0.0
    ruff>=0.1.0
    mypy>=1.6.0
commands =
    black --check --diff src/ tests/
    ruff check src/ tests/
    mypy src/file_editor

[testenv:format]
description = format code
deps =
    black>=23.0.0
    ruff>=0.1.0
commands =
    black src/ tests/
    ruff --fix src/ tests/

[testenv:docs]
description = build documentation
deps =
    sphinx>=5.0.0
    sphinx-rtd-theme>=1.0.0
commands =
    sphinx-build -b html docs/ docs/_build/html

[testenv:benchmark]
description = run performance benchmarks
deps =
    {[testenv]deps}
commands =
    pytest --benchmark-only --benchmark-json=benchmark.json {posargs:tests/}

[testenv:integration]
description = run integration tests
deps =
    {[testenv]deps}
commands =
    pytest -m integration {posargs:tests/}

[testenv:build]
description = build package for distribution
deps =
    build>=0.10.0
    twine>=4.0.0
commands =
    python -m build
    twine check dist/*

[testenv:clean]
description = clean up build artifacts
deps =
skip_install = true
commands =
    python -c "import shutil; shutil.rmtree('build', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('htmlcov', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.pytest_cache', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.coverage*', ignore_errors=True)"
